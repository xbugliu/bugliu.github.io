<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发 on 书写|记下人生痕迹</title>
    <link>http://towriting.com/categories/%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 开发 on 书写|记下人生痕迹</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>bugliu 2020</copyright>
    <lastBuildDate>Sun, 11 Oct 2015 00:00:00 +0000</lastBuildDate><atom:link href="http://towriting.com/categories/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Android 6.0 openssl crash</title>
      <link>http://towriting.com/blog/2015/10/11/android-6-dot-0-openssl-crash/</link>
      <pubDate>Sun, 11 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2015/10/11/android-6-dot-0-openssl-crash/</guid>
      <description>Android 6.0发布将近半年，预计本月推出正式版本。所以开发者们要重视起APP在Android 6.0下的兼容性问题。最近我们的App就遭遇到因6.0</description>
    </item>
    
    <item>
      <title>Windbg关联dmp文件</title>
      <link>http://towriting.com/blog/2014/12/07/windbg-dump-asso/</link>
      <pubDate>Sun, 07 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2014/12/07/windbg-dump-asso/</guid>
      <description>最近一段时间和Crash斗争，每天必不可少的事情是分析dump，每天少则分析几个，多则分析几十个是常有的。而打开dump到进入windbg c</description>
    </item>
    
    <item>
      <title>Windbg定位内存泄露的一种简单方法</title>
      <link>http://towriting.com/blog/2014/11/22/windbg-memory-leak/</link>
      <pubDate>Sat, 22 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2014/11/22/windbg-memory-leak/</guid>
      <description>前两天接到一个反映进程内存占用过G的投诉。问题是必現的，一定是内存泄露，应该容易定位，一同事远程看过现场，使用gflags和windbg试图</description>
    </item>
    
    <item>
      <title>C&#43;&#43;14-大餐后的甜点</title>
      <link>http://towriting.com/blog/2014/08/25/cpp-14-dessert/</link>
      <pubDate>Mon, 25 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2014/08/25/cpp-14-dessert/</guid>
      <description>这次C++标准委员会快速的通过了最新的C++标准:C++14，要知道C++11可是一再跳票后的产物。此次快速的发布的缘由可能和C++14的改</description>
    </item>
    
    <item>
      <title>关于重构的一些想法</title>
      <link>http://towriting.com/blog/2014/07/08/evil-refactor/</link>
      <pubDate>Tue, 08 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2014/07/08/evil-refactor/</guid>
      <description>很早之前听说过这样一个故事： 一个漂亮的女子与马戏团的小丑坠入爱河，并迅速结婚。小丑十分珍惜得来的幸福，努力挣钱，瞒着女子做了整容手术，为了给</description>
    </item>
    
    <item>
      <title>谁在用C&#43;&#43; STL？</title>
      <link>http://towriting.com/blog/2014/04/18/who-use-stl/</link>
      <pubDate>Fri, 18 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2014/04/18/who-use-stl/</guid>
      <description>C++用了四年了，这两天才把 《Effective STL》看了一遍。此书作为C++经典书系Effective三部曲之一，知名度与所受褒扬远不及</description>
    </item>
    
    <item>
      <title>Boost.Lambda与C&#43;&#43;11.Lambda的用法对比</title>
      <link>http://towriting.com/blog/2013/12/13/boost-lambda-vs-stand-lambda/</link>
      <pubDate>Fri, 13 Dec 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/12/13/boost-lambda-vs-stand-lambda/</guid>
      <description>我们知道C++11已经支持了Lambda表达式，大部分新的编译器都已支持Lambda。但boost里面的Lambda还是有存在的必要，因为并</description>
    </item>
    
    <item>
      <title>Effective Tools - 多粘贴板 &amp;&amp; 快速搜索</title>
      <link>http://towriting.com/blog/2013/11/17/effective-tools/</link>
      <pubDate>Sun, 17 Nov 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/11/17/effective-tools/</guid>
      <description>前两天买了一本《卓有成效的程序员》，看过几章后才明白为什么Stackoverflow里面人们会推荐这本书：它大抵是讲工具的，目的是为了提高程</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-常量表达式</title>
      <link>http://towriting.com/blog/2013/09/17/constexpr/</link>
      <pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/09/17/constexpr/</guid>
      <description>C++11有一些这样的改善，这种改善保证写出的代码比以往任何时候的执行效率都要好。这种改善之一就是生成常量表达式，允许程序利用编译时的计算能</description>
    </item>
    
    <item>
      <title>熟悉的陌生人-this指针(1)</title>
      <link>http://towriting.com/blog/2013/09/01/this-pointer/</link>
      <pubDate>Sun, 01 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/09/01/this-pointer/</guid>
      <description>this指针想必每个C++程序员都是再熟悉不过的了，我们每天的编程工作都会用到它，我们以为它是最忠实的朋友，不会给我们惹麻烦，但其实它可能不</description>
    </item>
    
    <item>
      <title>const 二三事</title>
      <link>http://towriting.com/blog/2013/08/21/things-of-const/</link>
      <pubDate>Wed, 21 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/21/things-of-const/</guid>
      <description>相信任何一个C++程序员都听说并使用过const。const在最初的C语言中是没有的，后来Bjarne Stroustrup和Dennis Ri</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-什么是C&#43;&#43;11</title>
      <link>http://towriting.com/blog/2013/08/01/what-is-cpp11/</link>
      <pubDate>Thu, 01 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/01/what-is-cpp11/</guid>
      <description>什么是C++0x? C++0x是C++最新标准标准化过程中的曾用名，在这一系列文章中我们将介绍最新标准添加的一系列新的语言特性。在2011年9</description>
    </item>
    
    <item>
      <title>降权启动进程</title>
      <link>http://towriting.com/blog/2013/07/31/de-elevate-start-process/</link>
      <pubDate>Wed, 31 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/07/31/de-elevate-start-process/</guid>
      <description>Win7下有些进程需要以管理员权限启动，比如安装程序。但又需要这个具有管理员权限的进程启动一个非管理员权限的进程。要实现这一点，方法很简单，</description>
    </item>
    
  </channel>
</rss>
