<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43;11 on 书写|记下人生痕迹</title>
    <link>http://towriting.com/tags/c&#43;&#43;11/</link>
    <description>Recent content in C&#43;&#43;11 on 书写|记下人生痕迹</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>bugliu 2020</copyright>
    <lastBuildDate>Tue, 17 Sep 2013 00:00:00 +0000</lastBuildDate><atom:link href="http://towriting.com/tags/c++11/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;11系列-常量表达式</title>
      <link>http://towriting.com/blog/2013/09/17/constexpr/</link>
      <pubDate>Tue, 17 Sep 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/09/17/constexpr/</guid>
      <description>C++11有一些这样的改善，这种改善保证写出的代码比以往任何时候的执行效率都要好。这种改善之一就是生成常量表达式，允许程序利用编译时的计算能</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-区间迭代</title>
      <link>http://towriting.com/blog/2013/08/20/ranged-for-loop/</link>
      <pubDate>Tue, 20 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/20/ranged-for-loop/</guid>
      <description>在我前面介绍C++11的文章中，我提到C++11将会带来一些实用的改进。我的意思是它将移除一些不必要的打字和其它影响快速编码的壁垒。我前面讲</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-lambda函数</title>
      <link>http://towriting.com/blog/2013/08/11/lambda-closures/</link>
      <pubDate>Sun, 11 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/11/lambda-closures/</guid>
      <description>C++11一个最激动人心的特性是支持创建lambda函数（有时称为闭包）。这意味着什么？一个Lambda函数是一个可以内联写在你代码中的函数</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-改进的类型推导：auto、decltype和新的函数语法</title>
      <link>http://towriting.com/blog/2013/08/08/improved-type-inference-in-cpp11/</link>
      <pubDate>Thu, 08 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/08/improved-type-inference-in-cpp11/</guid>
      <description>C++11引入了一些新的实用的类型推导能力，这意味着你可以花费更少的时间去写那些编译器已经知道的东西。当然有些时候你需要帮助编译器或者你的编</description>
    </item>
    
    <item>
      <title>C&#43;&#43;11系列-什么是C&#43;&#43;11</title>
      <link>http://towriting.com/blog/2013/08/01/what-is-cpp11/</link>
      <pubDate>Thu, 01 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>http://towriting.com/blog/2013/08/01/what-is-cpp11/</guid>
      <description>什么是C++0x? C++0x是C++最新标准标准化过程中的曾用名，在这一系列文章中我们将介绍最新标准添加的一系列新的语言特性。在2011年9</description>
    </item>
    
  </channel>
</rss>
