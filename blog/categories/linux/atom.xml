<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: linux | 书写|记下人生痕迹]]></title>
  <link href="http://towriting.com/blog/categories/linux/atom.xml" rel="self"/>
  <link href="http://towriting.com/"/>
  <updated>2013-08-03T23:23:02+08:00</updated>
  <id>http://towriting.com/</id>
  <author>
    <name><![CDATA[ToWriting]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Bg,Fg,&,Ctrl-Z -- 5个例子搞定Unix(linux)后台任务]]></title>
    <link href="http://towriting.com/blog/2013/08/03/unix-background-job/"/>
    <updated>2013-08-03T19:25:00+08:00</updated>
    <id>http://towriting.com/blog/2013/08/03/unix-background-job</id>
    <content type="html"><![CDATA[<p>当你执行一个要花费很长时间的unix脚本或者命令时，你可以在后台执行这个任务。</p>

<p>在这篇文章中，让我们回顾一下如何执行一个任务到后台、将任务切换到前台、查看所有后台任务和结束一个后台任务。</p>

<h2>1. 执行一个后台任务</h2>

<p>在命令后面添加<a href="https://en.wikipedia.org/wiki/Ampersand">&amp;</a>就可以将任务执行到后台。</p>

<p>比如，当你执行一个可能耗时很长的查找命令，你可以像下面例子中一样将它执行到后台。下面的例子将查找root目录下24小时内被修改过的文件：
<code>bash
$ find / -ctime -1 &gt; /tmp/changed-file-list.txt &amp;
</code></p>

<h2>2. 通过CTRL-Z和bg命令将当前任务切换到后台</h2>

<p>你也可以将一个已经运行的前台任务切换到后台：</p>

<ul>
<li>组合键 ‘CTRL+Z’ 将暂停当前任务。</li>
<li>执行bg将任务切换到后台执行</li>
</ul>


<p>像下面的例子，假如你忘记将任务执行到后台，你无需结束当前任务再启动一个新的后台任务。你可以暂停当前任务然后将它切换到后台：</p>

<p>```bash
$ find / -ctime -1 > /tmp/changed-file-list.txt</p>

<p>$ <a href="http://www.thegeekstuff.com/2010/05/unix-background-job/">CTRL-Z</a>+  Stopped                 find / -ctime -1 > /tmp/changed-file-list.txt</p>

<p>$ bg
```</p>

<h2>3. 使用jobs命令查看所有后台任务</h2>

<p>你可以使用<strong>jobs</strong>命令列出所有后台任务。一个jobs命令的可能输出如下：</p>

<p><code>bash
$ jobs
[1]   Running                 bash download-file.sh &amp;
[2]-  Running                 evolution &amp;
[3]+  Done                    nautilus .
</code></p>

<h2>4. 通过fg命令将后台任务切换到前台</h2>

<p>你可以通过<strong>fg</strong>命令将后台任务切换到前台。如果执行fg命令不带参数，则将最近的后台任务切换到前台。
<code>bash
$ fg
</code>
假如你有多个后台任务，你又想将指定任务切换到前台，那你可以先执行jobs命令列出所有任务号和对应命令。下面的例子，fg %1将一号任务(download-file.sh)切换到前台。
```bash
$ jobs
<a href="https://en.wikipedia.org/wiki/Ampersand">1</a>   Running                 bash download-file.sh &amp;
<a href="http://www.thegeekstuff.com/2010/05/unix-background-job/">2</a>&ndash;  Running                 evolution &amp;
<a href="http://toWriting.com">3</a>+  Done                    nautilus .</p>

<p>$ fg %1
```</p>

<h2>5. 通过kill %结束指定的后台任务</h2>

<p>假如你想杀死指定的后台任务，用<strong>kill</strong> %任务号就行了。下面是杀死2号任务的例子：
<code>bash
$ kill %2
</code>
译者：<a href="http://toWriting.com">toWriting.com</a>；翻译自：<a href="http://www.thegeekstuff.com/2010/05/unix-background-job/">Bg, Fg, &amp;, Ctrl-Z – 5 Examples to Manage Unix Background Jobs</a></p>
]]></content>
  </entry>
  
</feed>
